#!/usr/bin/env python
# encoding: utf-8
#
# @Author: David Nidever
# @Date: Jan 2022
# @Filename: ap3d
# @License: BSD 3-Clause
# @Copyright: David Nidever


from __future__ import division
from __future__ import print_function
from __future__ import absolute_import
from __future__ import unicode_literals

import argparse
import os
import sys
import subprocess
import pdb
from apogee_drp.plan import mkplan
import traceback

if __name__ == '__main__' :

    parser = argparse.ArgumentParser(
        prog=os.path.basename(sys.argv[0]),
        description='Runs apogee ap3D reduction')
    parser.add_argument('--planfile', type=str, nargs=1, help='Plan file')
    parser.add_argument('--num', type=str, nargs=1, help='Exposure number')
    parser.add_argument('--vers', type=str, nargs=1, help='APOGEE Reduction version')
    parser.add_argument('--telescope', type=str, nargs=1, help='Telescope')
    parser.add_argument('--clobber', help='Overwrite files?',action="store_true")
    parser.add_argument('--unlock', help='Remove lock files and start fresh',action="store_true")
    args = parser.parse_args()

    if args.clobber:
        clobber = '1'
    else:
        clobber = '0'
    if args.unlock:
        unlock = '1'
    else:
        unlock = '0'

    if args.planfile is None and args.num is None:
        raise ValueError('Must input either planfile or exposure number')

    # Make plan file for single exposure, if necessary
    if args.num is not None:
        if args.vers is None or args.telescope is None:
            raise ValueError('vers and telescope must be input with exposure num')
        num = int(args.num[0])
        vers = args.vers[0]
        telescope = args.telescope[0]
        planfile = mkplan.mkplan(num,apred=vers,telescope=telescope,ap3d=True,clobber=clobber)
    else:
        planfile = args.planfile[0]

    try:
        subprocess.call(["idl","-e","ap3d,'"+planfile+"',clobber="+clobber+",unlock="+unlock])
    except:
        traceback.print_exc()
